swagger: '2.0'

# basic meta information
info:
  title: mint API
  version: '0.1'
  description: mint is STUPS' secret rotator and distributor.

externalDocs:
  description: STUPS overview
  url: http://zalando-stups.github.io/

# technical configuration
basePath: /
produces:
- application/json
consumes:
- application/json

paths:

  # applications

  '/creds':
    get:
      summary: list credentials
      description: |
        Lists all credentials.
      tags:
        - Credentials
      operationId: 'org.zalando.stups.mint.storage.api/read-credentials'
      security:
      - oauth2:
        - userinfo
      responses:
        200:
          description: List of all credentials
          schema:
            type: array
            items:
              $ref: '#/definitions/CredentialSummaryRead'
        default:
          $ref: '#/responses/Error'

  '/creds/{application_id}':
    get:
      summary: read credential
      description: |
        Returns credentials for an application
      tags:
      - Credentials
      operationId: 'org.zalando.stups.mint.storage.api/read-credential'
      security:
      - oauth2:
        - userinfo
      parameters:
      - $ref: '#/parameters/ApplicationID'
      responses:
        200:
          description: Credentials of the application
          schema:
            $ref: '#/definitions/CredentialDetailsRead'
        404:
          description: Not found
        default:
          $ref: '#/responses/Error'

    put:
      summary: create credential
      description: |
        Creates a new credential entry.
      tags:
        - Credentials
      operationId: 'org.zalando.stups.mint.storage.api/create-credential!'
      security:
      - oauth2:
        - userinfo
      parameters:
      - $ref: '#/parameters/ApplicationID'
      - name: credential
        in: body
        required: true
        schema:
          $ref: '#/definitions/CredentialCreate'
      responses:
        200:
          description: Creation succeeded
        default:
          $ref: '#/responses/Error'

    delete:
      summary: delete credential
      description: |
        Deletes a credential entry.
      tags:
        - Credentials
      operationId: 'org.zalando.stups.mint.storage.api/delete-credential!'
      security:
      - oauth2:
        - userinfo
      parameters:
      - $ref: '#/parameters/ApplicationID'
      responses:
        200:
          description: Deletion succeeded
        default:
          $ref: '#/responses/Error'

  '/creds/{application_id}/sensitive':
    get:
      summary: read sensitive credential
      description: |
        Returns sensitive credentials for an application
      tags:
      - Credentials
      operationId: 'org.zalando.stups.mint.storage.api/read-credential-sensitive'
      security:
      - oauth2:
        - userinfo
      parameters:
      - $ref: '#/parameters/ApplicationID'
      responses:
        200:
          description: Credentials of the application
          schema:
            $ref: '#/definitions/CredentialSensitiveDetailsRead'
        404:
          description: Not found
        default:
          $ref: '#/responses/Error'

  '/creds/{application_id}/application_password':
    put:
      summary: update application password
      description: |
        Updates an application password.
      tags:
        - Credentials
      operationId: 'org.zalando.stups.mint.storage.api/update-application-password!'
      security:
      - oauth2:
        - userinfo
      parameters:
      - $ref: '#/parameters/ApplicationID'
      - name: credential
        in: body
        required: true
        schema:
          $ref: '#/definitions/CredentialApplicationPasswordUpdate'
      responses:
        200:
          description: Update succeeded
        default:
          $ref: '#/responses/Error'

  '/creds/{application_id}/client_secret':
    put:
      summary: update client secret
      description: |
        Updates a client secret.
      tags:
        - Credentials
      operationId: 'org.zalando.stups.mint.storage.api/update-client-secret!'
      security:
      - oauth2:
        - userinfo
      parameters:
      - $ref: '#/parameters/ApplicationID'
      - name: credential
        in: body
        required: true
        schema:
          $ref: '#/definitions/CredentialClientSecretUpdate'
      responses:
        200:
          description: Update succeeded
        default:
          $ref: '#/responses/Error'

# definitions

parameters:
  ApplicationID:
    name: application_id
    in: path
    type: string
    description: ID of the application
    required: true

responses:
  Error:
    description: An error occured.
    schema:
      $ref: '#/definitions/Error'

definitions:
  CredentialSummaryRead:
    properties:
      application_id:
        type: string
        description: Unique identifier of the application
      last_password_rotation:
        type: datetime
        description: Time of the last application password rotation
      last_secret_rotation:
        type: datetime
        description: Time of the last client secret rotation
    required:
      - application_id
      - status
      - last_password_rotation
      - last_secret_rotation
    example:
      application_id: kio
      status: SUCCESS
      last_password_rotation: 1234567890
      last_secret_rotation: 1234567890

  CredentialDetailsRead:
    properties:
      application_id:
        type: string
        description: Unique identifier of the application
      last_password_rotation:
        type: datetime
        description: Time of the last application password rotation
      last_secret_rotation:
        type: datetime
        description: Time of the last client secret rotation
      application_username:
        type: string
        description: The application's service username
      client_id:
        type: string
        description: The application's OAuth 2.0 client ID
    required:
      - application_id
      - status
      - last_password_rotation
      - last_secret_rotation
      - application_username
      - client_id
    example:
      application_id: kio
      last_password_rotation: 1234567890
      last_secret_rotation: 1234567890
      application_username: kio
      client_id: kio123

  CredentialSensitiveDetailsRead:
    properties:
      application_id:
        type: string
        description: Unique identifier of the application
      last_password_rotation:
        type: datetime
        description: Time of the last application password rotation
      last_secret_rotation:
        type: datetime
        description: Time of the last client secret rotation
      application_username:
        type: string
        description: The application's service username
      application_password:
        type: string
        description: The actual application's service password
      client_id:
        type: string
        description: The application's OAuth 2.0 client ID
      client_secret:
        type: string
        description: The actual client's OAuth 2.0 secret
    required:
      - application_id
      - last_password_rotation
      - last_secret_rotation
      - application_username
      - application_password
      - client_id
      - client_secret
    example:
      application_id: kio
      last_password_rotation: 1234567890
      last_secret_rotation: 1234567890
      application_username: kio
      application_password: password123
      client_id: kio123
      client_secret: secret456

  CredentialCreate:
    properties:
      application_username:
        type: string
        description: The application's service username
      client_id:
        type: string
        description: The application's OAuth 2.0 client ID
    required:
      - application_username
      - client_id
    example:
      application_username: kio
      client_id: kio123

  CredentialApplicationPasswordUpdate:
    properties:
      last_password_rotation:
        type: datetime
        description: Time of the last application password rotation
      application_password:
        type: string
        description: The application's service password
    required:
      - last_password_rotation
      - application_password
    example:
      last_password_rotation: 1234567890
      application_password: abcdef123

  CredentialClientSecretUpdate:
    properties:
      last_secret_rotation:
        type: datetime
        description: Time of the last client secret rotation
      client_id:
        type: string
        description: The application's OAuth 2.0 client ID
      client_secret:
        type: string
        description: The actual client's OAuth 2.0 secret
    required:
      - last_secret_rotation
      - client_id
      - client_secret
    example:
      last_secret_rotation: 1234567890
      client_id: kio123
      client_secret: abcdef123

  Error:
    type: object
    properties:
      message:
        type: string
    example:
      message: Internal Server Error

securityDefinitions:
  oauth2:
    type: oauth2
    description: OAuth 2.0 access control.
    scopes:
      userinfo: Grants everyone read access to all APIs.
      api/write: Grants write access to save APIs.
